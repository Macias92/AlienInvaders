import sys
from settings import Settings
import pygame
from ship import Ship
from bullet import Bullet


class AlienInvaders:
    """General class intended for manage the resources and the way the game works"""

    def __init__(self):
        """Initialize the game and it's resources"""
        pygame.init()
        self.settings = Settings()
        self.screen = pygame.display.set_mode((0, 0), pygame.FULLSCREEN)
        self.settings.screen_width = self.screen.get_rect().width
        self.settings.screen_height = self.screen.get_rect().height
        pygame.display.set_caption("Alien Invaders")

        self.ship = Ship(self)
        self.bullets = pygame.sprite.Group()

        # # Define the background color
        # self.bg_color = (10, 10, 60)

    def run_game(self):
        """Run the game loop"""
        while True:
            self._check_events()
            self.ship.update()
            self._update_screen()
            self._update_bullets()

    def _check_events(self):
        """Reaction for events generated by keyboard and mouse"""
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                sys.exit()
            elif event.type == pygame.KEYDOWN:
                self._check_keydown_events(event)
            elif event.type == pygame.KEYUP:
                self._check_keyup_events(event)

    def _check_keydown_events(self, event):
        """Reactions for inserted key"""
        if event.key == pygame.K_RIGHT:
            self.ship.moving_right = True
        elif event.key == pygame.K_LEFT:
            self.ship.moving_left = True
        elif event.key == pygame.K_q:
            sys.exit()
        elif event.key == pygame.K_SPACE:
            self._fire_bullet()

    def _check_keyup_events(self, event):
        """Reactions for released key"""
        if event.key == pygame.K_RIGHT:
            self.ship.moving_right = False
        elif event.key == pygame.K_LEFT:
            self.ship.moving_left = False

    def _fire_bullet(self):
        """Create a new bullet and add it to a bullet group"""
        if len(self.bullets) < self.settings.bullets_allowed:
            new_bullet = Bullet(self)
            self.bullets.add(new_bullet)

    def _update_bullets(self):
        """Update bullet's location and remove those which are beyond the screen"""
        self.bullets.update()

        # Delete bullets which are beyond the screen
        for bullet in self.bullets.copy():
            if bullet.rect.bottom <= 0:
                self.bullets.remove(bullet)

    def _update_screen(self):
        """Update images on screen and get into new screen"""

        # Refreshing the screen during every game loop
        # self.screen.fill(self.settings.bg_color)
        self.screen.blit(self.settings.bg, (0, 0))
        self.ship.blitme()
        for bullet in self.bullets.sprites():
            bullet.draw_bullet()

        # Display the last modified screen
        pygame.display.flip()


if __name__ == '__main__':
    ai = AlienInvaders()
    ai.run_game()
